{"ast":null,"code":"var _jsxFileName = \"/Users/brettdickenson1/Desktop/WORK/drivvn-tech-task/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport CardDisplay from \"./components/CardDisplay\";\nimport Button from \"./Button\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [deckId, setDeckId] = useState(null);\n  const [currentCard, setCurrentCard] = useState(null);\n  const [previousCard, setPreviousCard] = useState(null);\n  const [valueMatches, setValueMatches] = useState(0);\n  const [remainingCards, setRemainingCards] = useState(52);\n  useEffect(() => {\n    fetchNewDeck();\n  }, []);\n  const fetchNewDeck = async () => {\n    const response = await fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\");\n    const data = await response.json();\n    setDeckId(data.deck_id);\n  };\n  const drawCard = async () => {\n    const response = await fetch(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=1`);\n    const data = await response.json();\n    const drawnCard = data.cards[0];\n    if (previousCard && drawnCard.value === previousCard.value) {\n      setValueMatches(valueMatches + 1);\n      console.log(\"SNAP VALUE!\");\n    }\n    setCurrentCard(drawnCard);\n    setPreviousCard(drawnCard);\n    setRemainingCards(data.remaining);\n    if (data.remaining === 0) {\n      setCurrentCard(null); // Reset current card\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deck of Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: drawCard,\n      disabled: remainingCards === 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardDisplay, {\n      currentCard: currentCard,\n      previousCard: previousCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining cards: \", remainingCards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), valueMatches > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"SNAP VALUE!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NcbPvXuU1D3HQ1R0A93+brenDuo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CardDisplay","Button","jsxDEV","_jsxDEV","App","_s","deckId","setDeckId","currentCard","setCurrentCard","previousCard","setPreviousCard","valueMatches","setValueMatches","remainingCards","setRemainingCards","fetchNewDeck","response","fetch","data","json","deck_id","drawCard","drawnCard","cards","value","console","log","remaining","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/brettdickenson1/Desktop/WORK/drivvn-tech-task/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from \"react\";\nimport CardDisplay from \"./components/CardDisplay\";\nimport Button from \"./Button\";\nimport \"./App.css\";\n\nfunction App() {\n  const [deckId, setDeckId] = useState(null);\n  const [currentCard, setCurrentCard] = useState(null);\n  const [previousCard, setPreviousCard] = useState(null);\n  const [valueMatches, setValueMatches] = useState(0);\n  const [remainingCards, setRemainingCards] = useState(52);\n\n  useEffect(() => {\n    fetchNewDeck();\n  }, []);\n\n  const fetchNewDeck = async () => {\n    const response = await fetch(\n      \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"\n    );\n    const data = await response.json();\n    setDeckId(data.deck_id);\n  };\n\n  const drawCard = async () => {\n    const response = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=1`\n    );\n    const data = await response.json();\n    const drawnCard = data.cards[0];\n\n    if (previousCard && drawnCard.value === previousCard.value) {\n      setValueMatches(valueMatches + 1);\n      console.log(\"SNAP VALUE!\");\n    }\n\n    setCurrentCard(drawnCard);\n    setPreviousCard(drawnCard);\n    setRemainingCards(data.remaining);\n\n    if (data.remaining === 0) {\n      setCurrentCard(null); // Reset current card\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Deck of Cards</h1>\n      <Button onClick={drawCard} disabled={remainingCards === 0} />\n      <CardDisplay currentCard={currentCard} previousCard={previousCard} />\n      <p>Remaining cards: {remainingCards}</p>\n      {valueMatches > 0 && <p>SNAP VALUE!</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}